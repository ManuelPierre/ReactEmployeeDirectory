{"version":3,"sources":["utils/api.js","components/table.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","EmployeeTable","props","Table","striped","bordered","hover","randomUsers","map","x","i","src","picture","thumbnail","name","first","last","email","gender","phone","App","state","filteredUsers","getRandomUsers","a","API","response","console","log","data","results","setState","warn","handleSearch","event","target","value","selectedUser","filter","user","includes","sortByAsc","sortedAscUsers","sort","b","nameA","toUpperCase","nameB","sortByDesc","sortedDescUsers","this","InputGroup","className","FormControl","placeholder","aria-label","aria-describedby","onChange","e","Append","Button","variant","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1792c8e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\r\n\r\nexport default {\r\n  getRandomUsers: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=30&nat=us\");\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nfunction EmployeeTable(props) {\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Picture</th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Email</th>\r\n          <th>Gender</th>\r\n          <th>Phone</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.randomUsers.map((x, i) => (\r\n          <tr key={i}>\r\n            <td>{i + 1}</td>\r\n            <td>\r\n              <img src={x.picture.thumbnail} />\r\n            </td>\r\n            <td>{x.name.first}</td>\r\n            <td>{x.name.last}</td>\r\n            <td>{x.email}</td>\r\n            <td>{x.gender}</td>\r\n            <td>{x.phone}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default EmployeeTable;\r\n","import React, { useState, useEffect } from \"react\";\nimport API from \"./utils/api\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport { Button, FormControl, InputGroup, Table } from \"react-bootstrap\";\nimport EmployeeTable from \"./components/table\";\n\nclass App extends React.Component {\n  state = {\n    randomUsers: [],\n    filteredUsers: [],\n  };\n\n  componentDidMount() {\n    this.getRandomUsers();\n  }\n\n  getRandomUsers = async () => {\n    try {\n      const response = await API.getRandomUsers();\n      console.log(response.data.results);\n      this.setState({\n        randomUsers: response.data.results,\n        filteredUsers: response.data.results,\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  };\n\n  handleSearch = (event) => {\n    console.log(event.target.value);\n    let selectedUser = event.target.value;\n\n    this.setState({\n      filteredUsers: this.state.randomUsers.filter((user) => {\n        return user.name.first.includes(selectedUser);\n      }),\n    });\n  };\n\n  sortByAsc = (event) => {\n    console.log(\"clicked!\");\n    let sortedAscUsers = this.state.filteredUsers;\n\n    sortedAscUsers.sort(function (a, b) {\n      var nameA = a.name.first.toUpperCase(); \n      var nameB = b.name.first.toUpperCase(); \n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n\n   \n      return 0;\n    });\n\n    this.setState({ filteredUsers: sortedAscUsers });\n  };\n\n  sortByDesc = (event) => {\n    console.log(\"clicked!\");\n    let sortedDescUsers = this.state.filteredUsers;\n\n    sortedDescUsers.sort(function (a, b) {\n      var nameA = a.name.first.toUpperCase(); \n      var nameB = b.name.first.toUpperCase(); \n      if (nameA > nameB) {\n        return -1;\n      }\n      if (nameA < nameB) {\n        return 1;\n      }\n\n      \n      return 0;\n    });\n\n    this.setState({ filteredUsers: sortedDescUsers });\n  };\n\n  render() {\n    return (\n      <div>\n      \n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"Recipient's username\"\n            aria-label=\"Recipient's username\"\n            aria-describedby=\"basic-addon2\"\n            onChange={(e) => this.handleSearch(e)}\n          />\n\n          <InputGroup.Append>\n            <Button variant=\"outline-secondary\">Search</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        Sort:\n        <Button variant=\"outline-secondary\" onClick={(e) => this.sortByAsc(e)}>\n          asc\n        </Button>\n        <Button variant=\"outline-secondary\" onClick={(e) => this.sortByDesc(e)}>\n          desc\n        </Button>\n        <EmployeeTable randomUsers={this.state.filteredUsers} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}